version: "3"
services:
  grafana:
    image: grafana/grafana:9.2.3 # 9.4.7
    volumes:
      - ./config/grafana:/etc/grafana-config
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./config/grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./config/grafana/dashboards:/var/lib/grafana/provisioned-dashboards
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/etc/grafana-config/config.ini

  prometheus:
    image: prom/prometheus:v2.43.0
    volumes:
      - ./config/prometheus:/etc/prometheus-config
      - prometheus_data:/prometheus
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus-config/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-remote-write-receiver

  agent:
    image: grafana/agent:latest
    volumes:
      - ./config/agent:/etc/agent-config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AGENT_MODE: "flow"
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    ports:
      - "12345:12345"
    entrypoint:
      - /bin/grafana-agent
      - run
      - /etc/agent-config/config.river
      - --server.http.listen-addr=0.0.0.0:12345
    depends_on: [prometheus]

  seed:
    build:
      context: ../..
      dockerfile: example/basic/Dockerfile
    ports:
      - 8080
    depends_on: [agent]

  workers:
    deploy:
      replicas: 9
    build:
      context: ../..
      dockerfile: example/basic/Dockerfile
    ports:
      - 8080
    command:
      - --join-addrs=seed:8080
    depends_on: [agent]

volumes:
  prometheus_data:
  grafana_data:
